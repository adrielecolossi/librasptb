[{"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\index.js":"1","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\App.js":"2","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\reportWebVitals.js":"3","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formMarcarLacuna\\index.js":"4","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAssociarColunas\\index.js":"5","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarLacuna\\index.js":"6","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\form\\formimg.js":"7","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\login\\login.js":"8","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\splashScreen\\index.js":"9","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\form\\form.js":"10","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarPalavra\\index.js":"11","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\contato\\contato.js":"12","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaCorreta\\index.js":"13","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formOrdenarFrase\\index.js":"14","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaFraseCorreta\\index.js":"15","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formMarcarLacuna\\styles.js":"16","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAssociarColunas\\styles.js":"17","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarLacuna\\styles.js":"18","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaCorreta\\styles.js":"19","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaFraseCorreta\\styles.js":"20","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\header\\index.js":"21","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\index.js":"22","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Button\\index.js":"23","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\splashScreen\\styles.js":"24","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\login\\styles.js":"25","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formOrdenarFrase\\styles.js":"26","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarPalavra\\styles.js":"27","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\footer\\index.js":"28","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\styles.js":"29","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\header\\styles.js":"30","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Button\\styles.js":"31","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Card\\index.js":"32","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\footer\\styles.js":"33","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Card\\styles.js":"34"},{"size":517,"mtime":1656276029062,"results":"35","hashOfConfig":"36"},{"size":2390,"mtime":1656276029047,"results":"37","hashOfConfig":"36"},{"size":375,"mtime":1656276029063,"results":"38","hashOfConfig":"36"},{"size":3831,"mtime":1656280174846,"results":"39","hashOfConfig":"36"},{"size":4670,"mtime":1656280001838,"results":"40","hashOfConfig":"36"},{"size":2974,"mtime":1656279927620,"results":"41","hashOfConfig":"36"},{"size":3201,"mtime":1656276029054,"results":"42","hashOfConfig":"36"},{"size":2571,"mtime":1656278161609,"results":"43","hashOfConfig":"36"},{"size":3303,"mtime":1656277915827,"results":"44","hashOfConfig":"36"},{"size":10335,"mtime":1656276029053,"results":"45","hashOfConfig":"36"},{"size":7705,"mtime":1656281238878,"results":"46","hashOfConfig":"36"},{"size":629,"mtime":1656276029051,"results":"47","hashOfConfig":"36"},{"size":6449,"mtime":1656281485322,"results":"48","hashOfConfig":"36"},{"size":7200,"mtime":1656281617866,"results":"49","hashOfConfig":"36"},{"size":3870,"mtime":1656280040586,"results":"50","hashOfConfig":"36"},{"size":1432,"mtime":1656276029059,"results":"51","hashOfConfig":"36"},{"size":1850,"mtime":1656276029057,"results":"52","hashOfConfig":"36"},{"size":1259,"mtime":1656276029057,"results":"53","hashOfConfig":"36"},{"size":1263,"mtime":1656276029055,"results":"54","hashOfConfig":"36"},{"size":1261,"mtime":1656276029056,"results":"55","hashOfConfig":"36"},{"size":691,"mtime":1656279327518,"results":"56","hashOfConfig":"36"},{"size":301,"mtime":1656276029050,"results":"57","hashOfConfig":"36"},{"size":499,"mtime":1656276029048,"results":"58","hashOfConfig":"36"},{"size":1169,"mtime":1656276029064,"results":"59","hashOfConfig":"36"},{"size":984,"mtime":1656276029063,"results":"60","hashOfConfig":"36"},{"size":1863,"mtime":1656276029060,"results":"61","hashOfConfig":"36"},{"size":2138,"mtime":1656276029058,"results":"62","hashOfConfig":"36"},{"size":339,"mtime":1656276029052,"results":"63","hashOfConfig":"36"},{"size":212,"mtime":1656276029050,"results":"64","hashOfConfig":"36"},{"size":397,"mtime":1656276029061,"results":"65","hashOfConfig":"36"},{"size":338,"mtime":1656276029049,"results":"66","hashOfConfig":"36"},{"size":419,"mtime":1656276029049,"results":"67","hashOfConfig":"36"},{"size":260,"mtime":1656276029052,"results":"68","hashOfConfig":"36"},{"size":2410,"mtime":1656276029050,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"117q1dh",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\index.js",[],["150","151"],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\App.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formMarcarLacuna\\index.js",["152","153"],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAssociarColunas\\index.js",["154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170"],"import React from \"react\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios, { post } from \"axios\";\r\nimport { InputForm, DivInputForm, Title, DivSelect} from \"./styles.js\";\r\nimport ButtonJS from \"../components/Input/Button/index.js\";\r\nimport InputJS from \"../components/Input/index.js\";\r\n\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nfunction FormAssociarColunas() {\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [categoria, setCategoria] = useState(\"\");\r\n  const [imagem1, setImagem1] = useState(\"\");\r\n  const [imagem2, setImagem2] = useState(\"\");\r\n  const [imagem3, setImagem3] = useState(\"\");\r\n  const [imagem4, setImagem4] = useState(\"\");\r\n  const [imagem5, setImagem5] = useState(\"\");\r\n  const [alternativa1, setAlternativa1] = useState(\"\");\r\n  const [alternativa2, setAlternativa2] = useState(\"\");\r\n  const [alternativa3, setAlternativa3] = useState(\"\");\r\n  const [alternativa4, setAlternativa4] = useState(\"\");\r\n  const [alternativa5, setAlternativa5] = useState(\"\");\r\n\r\n  const enviaDados = async (e) => {\r\n    e.preventDefault();\r\n    axios \r\n      .post(\"http://localhost:3001/questao\", {\r\n        token,\r\n        tipo,\r\n        categoria, \r\n      })\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  };\r\n\r\n  const enviaImagem = async (e) => {\r\n    e.preventDefault();\r\n    axios \r\n      .post(\"http://localhost:3001/imagem\", {})\r\n      .then((response) => {})\r\n      .catch((error) => {\r\n        alert(error);\r\n      });\r\n  };\r\n  const categorias = [\r\n    {\r\n      name: \"Matemática\",\r\n    },\r\n    {\r\n      name: \"Biologia\",\r\n    }\r\n  ]\r\n  let header;\r\n  const [isLoggedIn, setIsLoggedIn]= useState()\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('tokenLibrasPTB');\r\n    const getLogin = async () => {\r\n      const response = await axios.get(\r\n        \"http://localhost:3001/login\", { params: { token } }\r\n      );\r\n      setIsLoggedIn(response.data.msg);\r\n    console.log(isLoggedIn)\r\n    };\r\n    getLogin();\r\n  }, []);\r\n  if (isLoggedIn === 'loggedIn') {\r\n   header = <HeaderOne logged={true}></HeaderOne>\r\n    } else {\r\n  header = <HeaderOne logged={false}></HeaderOne>\r\n    }\r\n\r\nif(isLoggedIn=='loggedIn'){\r\n  return (\r\n    <>\r\n      <HeaderOne logged={true}></HeaderOne>\r\n      <Title fontSize={2.5} color={\"#000000\"}>\r\n        Associar Colunas\r\n      </Title>\r\n      <Title fontSize={1} color={\"#7A7A7A\"}>\r\n        Modelo em que se associa duas respostas de colunas\r\n      </Title>\r\n      <DivInputForm>\r\n        <DivSelect>\r\n          <label for=\"categoria\">Categoria</label>\r\n          <select\r\n            id=\"categoria\"\r\n            style={{ marginLeft: \"5%\" }}\r\n          >\r\n            {categorias.map((categoria) => {\r\n              return (\r\n                <option key={categoria.nome} value={categoria.id}>\r\n                  {categoria.nome}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <ButtonJS\r\n            onClick={\"\"}\r\n            backgroundColor={\"#8ECAE6\"}\r\n            color={\"#000000\"}\r\n            borderRadius={0}\r\n            name={\"Criar Categoria\"}\r\n          />\r\n        </DivSelect>\r\n        <InputForm>\r\n          <p> Imagens </p>\r\n          <p> Palavras </p>\r\n        </InputForm>\r\n        <InputForm>\r\n          <InputJS type=\"file\" value={imagem1}></InputJS>\r\n          <hr></hr>\r\n          <InputJS type=\"text\" value={alternativa1} name=\"alternativa1\"></InputJS>\r\n        </InputForm>\r\n        <InputForm>\r\n          <InputJS type=\"file\" value={imagem2}></InputJS>\r\n          <hr></hr>\r\n          <InputJS type=\"text\" value={alternativa2} name=\"alternativa2\"></InputJS>\r\n        </InputForm>\r\n        <InputForm>\r\n          <InputJS type=\"file\" value={imagem3}></InputJS>\r\n          <hr></hr>\r\n          <InputJS type=\"text\" value={alternativa3} name=\"alternativa3\"></InputJS>\r\n        </InputForm>\r\n        <InputForm>\r\n          <InputJS type=\"file\" value={imagem4}></InputJS>\r\n          <hr></hr>\r\n          <InputJS type=\"text\" value={alternativa4} name=\"alternativa4\"></InputJS>\r\n        </InputForm>\r\n        <InputForm>\r\n          <InputJS type=\"file\" value={imagem5}></InputJS>\r\n          <hr></hr>\r\n          <InputJS type=\"text\" value={alternativa5} name=\"alternativa5\"></InputJS>\r\n        </InputForm>\r\n\r\n        <ButtonJS\r\n          onClick={\"\"}\r\n          backgroundColor={\"#219EBC\"}\r\n          color={\"#FFFF\"}\r\n          borderRadius={0}\r\n          name={\"Criar Questão\"}\r\n        />\r\n      </DivInputForm>\r\n    </>\r\n  );}else{\r\n    return(<div>{header}<p>Faça login primeiro</p></div>)\r\n  }\r\n}\r\nexport default FormAssociarColunas;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarLacuna\\index.js",["171","172","173"],"import React, {useState, useEffect} from \"react\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport axios, { post } from \"axios\";\r\nimport { DivInputForm, Title, DivSelect } from \"./styles.js\";\r\nimport ButtonJS from \"../components/Input/Button/index.js\";\r\nimport InputJS from \"../components/Input/index.js\";\r\nfunction FormDigitarLacuna() {\r\n  const categorias = [\r\n    {\r\n      name: \"Matemática\",\r\n    },\r\n    {\r\n      name: \"Biologia\",\r\n    }\r\n  ]\r\n  let header;\r\n  const [isLoggedIn, setIsLoggedIn]= useState()\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('tokenLibrasPTB');\r\n    const getLogin = async () => {\r\n      const response = await axios.get(\r\n        \"http://localhost:3001/login\", { params: { token } }\r\n      );\r\n      setIsLoggedIn(response.data.msg);\r\n    console.log(isLoggedIn)\r\n    };\r\n    getLogin();\r\n  }, []);\r\n  if (isLoggedIn === 'loggedIn') {\r\n   header = <HeaderOne logged={true}></HeaderOne>\r\n    } else {\r\n  header = <HeaderOne logged={false}></HeaderOne>\r\n    }\r\n\r\nif(isLoggedIn=='loggedIn'){\r\n  return (\r\n    <>\r\n      <HeaderOne logged={true}></HeaderOne>\r\n      <Title fontSize={2.5} color={\"#000000\"}>\r\n        Digitar lacuna\r\n      </Title>\r\n      <Title fontSize={1} color={\"#7A7A7A\"}>\r\n        Modelo em que se digita uma palavra para preencher uma frase\r\n      </Title>\r\n\r\n      <DivInputForm>\r\n        <DivSelect>\r\n          <label for=\"categoria\">Categoria</label>\r\n          <select\r\n            id=\"categoria\"\r\n            style={{ marginLeft: \"5%\" }}\r\n          >\r\n            {categorias.map((categoria) => {\r\n              return (\r\n                <option key={categoria.nome} value={categoria.id}>\r\n                  {categoria.nome}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <ButtonJS\r\n            onClick={\"\"}\r\n            backgroundColor={\"#8ECAE6\"}\r\n            color={\"#000000\"}\r\n            borderRadius={0}\r\n            name={\"Criar Categoria\"}\r\n          />\r\n        </DivSelect>\r\n      </DivInputForm>\r\n      <DivInputForm>\r\n        <div>\r\n          <label for=\"inputimg\">Imagem</label>\r\n          <InputJS name=\"inputimg\" type=\"file\" color={\"rgba(142, 202, 230, 0.5)\"}></InputJS>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label for=\"frase\">Frase</label>\r\n          <InputJS name=\"frase\" type=\"text\" color={\"rgba(142, 202, 230, 0.5)\"}></InputJS>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label for=\"lacuna\">Palavra que será a lacuna</label>\r\n          <InputJS name=\"lacuna\" type=\"text\" color={\"rgba(142, 202, 230, 0.5)\"}></InputJS>\r\n        </div>\r\n        <br />\r\n          <ButtonJS\r\n            onClick={\"\"}\r\n            backgroundColor={\"#219EBC\"}\r\n            color={\"#FFFF\"}\r\n            borderRadius={0}\r\n            name={\"Criar Questão\"}\r\n          />\r\n      </DivInputForm>\r\n    </>\r\n  ); }else{\r\n    return(<div>{header}<p>Faça login primeiro</p></div>)\r\n  }\r\n\r\n}\r\nexport default FormDigitarLacuna;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\form\\formimg.js",["174","175","176"],"import React, { useState } from \"react\";\r\nimport axios, {post} from 'axios'\r\n\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function App() {\r\n  const [file, setFile] = useState();\r\n/*\r\n  const enviaDados = async (e) => {\r\n    console.log('enviando');\r\n    e.preventDefault(); \r\n    const requestConfig = {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n    axios.post('http://localhost:3001/imagem', {file: file}, requestConfig);\r\n   \r\n    }\r\n    \r\n    import axios from \"axios\";\r\n*/\r\n\r\n/*\r\nconst enviaDados = async (e) => {\r\n  e.preventDefault()\r\n  const fd= new FormData()\r\n  fd.append('file', file,'file')\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'http://localhost:3003/imagem',\r\n    headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n    data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"image (1).jpg\"\\r\\nContent-Type: image/jpeg\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n'\r\n  };\r\naxios.post('http://localhost:3001/imagem', fd, options).then(res =>{\r\n  console.log(res)\r\n})\r\n}\r\n*/\r\n\r\n/*\r\n\r\n\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'http://localhost:3003/imagem',\r\n    headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n    data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"image (1).jpg\"\\r\\nContent-Type: image/jpeg\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n'\r\n  };\r\n  \r\n  axios.request(options).then(function (response) {\r\n    console.log(response.data);\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n*/\r\nvar axios = require(\"axios\").default;\r\nasync function enviaDados(e){\r\n\r\n  e.preventDefault()\r\n  const fd = new FormData()\r\n  fd.append('file', file)\r\n  console.log(file)\r\n  const response = await axios.post('http://localhost:3001/imagem', fd)\r\nalert(response.status);\r\n\r\n\r\n}\r\n\r\n/*\r\nconst response = await fetch('http://localhost:3001/imagem',{\r\n  method: 'POST',\r\n  headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n  body: form\r\n})\r\n*/\r\n\r\n/*\r\nvar options = {\r\n  method: 'POST',\r\n  url: 'http://localhost:3001/imagem',\r\n  headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n  data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"image (1).jpg\"\\r\\nContent-Type: image/jpeg\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n'\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n  console.log(response.data);\r\n}).catch(function (error) {\r\n  console.error(error);\r\n});\r\n}\r\n*/\r\n/*\r\n<form  method=\"post\" enctype=\"multipart/form-data\">\r\n  <input type=\"file\" name=\"file\" id=\"file\" onChange={(v)=> setFile(v.target.files[0])} />\r\n  <input type=\"submit\" value=\"submit\" onClick={enviaDados}/>\r\n</form>\r\n*/\r\n\r\n\r\n    return (\r\n  \r\n <form enctype=\"multipart/form-data\" method=\"POST\"> \r\n <input type=\"file\" name=\"myImage\" accept=\"image/*\"  onChange={(v)=> setFile('')}/>\r\n <input type=\"submit\" value=\"Upload Photo\" onClick={enviaDados} />\r\n</form>\r\n     );\r\n    }\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\login\\login.js",["177","178","179","180"],"import React, { useState, useEffect } from \"react\";\r\nimport { unmountComponentAtNode, render } from \"react-dom\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport { BackBanner } from \"./styles\";\r\nimport { LoginForm } from './styles';\r\n\r\nconst axios = require(\"axios\");\r\n\r\nlet token = \"\";\r\nfunction Login() {\r\n  let [email, setEmail] = useState(\"\");\r\n  let [senha, setSenha] = useState(\"\");\r\n  const enviaDados = async (e) => {\r\n    e.preventDefault();\r\n\r\n    axios\r\n      .post(\"http://localhost:3001/login\", {\r\n        email: email,\r\n        senha: senha,\r\n      })\r\n      .then(\r\n        (response) => {\r\n          token = response.data.token;\r\n          let emailLogado = response.data.email;\r\n          console.log(token);\r\n          localStorage.setItem(\"tokenLibrasPTB\", token);\r\n          localStorage.setItem(\"user\", emailLogado);\r\n          alert(\"Autenticado\");\r\n          window.location.href = 'http://localhost:3000/home';\r\n        },\r\n        (error) => {\r\n          alert(\"Não autenticado, há erros na senha ou no email\");\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\nlet header;\r\n  const [isLoggedIn, setIsLoggedIn]= useState()\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('tokenLibrasPTB');\r\n    const getLogin = async () => {\r\n      const response = await axios.get(\r\n        \"http://localhost:3001/login\", { params: { token } }\r\n      );\r\n      setIsLoggedIn(response.data.msg);\r\n    console.log(isLoggedIn)\r\n    };\r\n    getLogin();\r\n  }, []);\r\n  if (isLoggedIn === 'loggedIn') {\r\n   header = <HeaderOne logged={true}></HeaderOne>\r\n    } else {\r\n  header = <HeaderOne logged={false}></HeaderOne>\r\n    }\r\n  return (\r\n    <>\r\n      {header}\r\n      <BackBanner>\r\n        <LoginForm>\r\n          <input\r\n            type=\"text\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"E-mail\"\r\n            onChange={(v) => setEmail(v.target.value)}\r\n            value={email}\r\n          />\r\n\r\n          <input\r\n            type=\"password\"\r\n            id=\"senha\"\r\n            name=\"senha\"\r\n            placeholder=\"Senha\"\r\n            onChange={(v) => setSenha(v.target.value)}\r\n            value={senha}\r\n          />\r\n          <button\r\n            onClick={enviaDados}\r\n            value=\"Enviar\"\r\n            className=\"forms-button\"\r\n            id=\"buttonLogin\"\r\n          >\r\n            Logar{\" \"}\r\n          </button>\r\n        </LoginForm>\r\n\r\n        <img src=\"https://drive.google.com/uc?id=1JJYSNQ5xjSx8QYRRDDd7OtoiN1W7_9yS\" />\r\n      </BackBanner>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\splashScreen\\index.js",["181","182"],"import React, {useState, useEffect} from \"react\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport { Banner, BannerCards, Title } from \"./styles\";\r\nimport Card from \"../components/Input/Card\";\r\nimport axios from \"axios\";\r\nfunction SplashScreen() {\r\n  const cardsContent = [\r\n    {\r\n      image: \"https://drive.google.com/uc?id=1--GhiQKm9xojTvq2yPNwPBFQVLm5b8D6\",\r\n      title: \"Associar colunas\",\r\n      subtitle: \"Modelo em que se associa duas respostas de colunas\",\r\n      link: \"./FormAssociarColunas\",\r\n    },\r\n    {\r\n      image: \"https://drive.google.com/uc?id=1hw9NhdbmhwB0jcaegsAXYkGYcHnnKUoe\",\r\n      title: \"Ordenar frase\",\r\n      subtitle: \"Modelo em que se ordena palavras de uma frase\",\r\n      link: \"./FormOrdenarFrase\",\r\n    },\r\n    {\r\n      image: \"https://drive.google.com/uc?id=1RhfgdrfXiRkPFZP7tpgTUHxuaXVcsDL8\",\r\n      title: \"Digitar palavra (imagem/vídeo)\",\r\n      subtitle: \"Modelo em que se digita o que aparece na imagem/vídeo\",\r\n      link: \"./FormDigitarPalavra\",\r\n    },\r\n    {\r\n      image: \"https://drive.google.com/uc?id=1otAFn5cnK3ZZ49nmqway2TdqEmt8KlKt\",\r\n      title: \"Digitar lacuna\",\r\n      subtitle: \"Modelo em que se digita uma palavra para preencher uma frase\",\r\n      link: \"./FormDigitarLacuna\",\r\n    },\r\n    {\r\n      image: \"https://drive.google.com/uc?id=169RNcKlK-Cbba4sb99Z1LgBL1atLjjd6\",\r\n      title: \"Marcar Lacuna\",\r\n      subtitle: \"Modelo em que se marca uma alternativa para preencher frase\",\r\n      link: \"./FormMarcarLacuna\",\r\n    },\r\n    {\r\n      image: \"https://drive.google.com/uc?id=1tJQZFJGFNuwccRpWoSNKtx1SomeLCgRw\",\r\n      title: \"Marcar palavra (imagem/vídeo)\",\r\n      subtitle: \"Modelo em que se marca uma alternativa para palavra da imagem/vídeo\",\r\n      link: \"./FormAlternativaCorreta\",\r\n    },\r\n    {\r\n      image: \"https://drive.google.com/uc?id=1DrU1sE3HiSclK8mQl9jyWj1dvoKQJxKb\",\r\n      title: \"Alternativa correta (frase)\",\r\n      subtitle:\r\n        \"Modelo em que se marca uma alternativa correta de qual é a frase\",\r\n      link: \"./FormAlternativaFraseCorreta\",\r\n    },\r\n  ];\r\n  let header;\r\n  const [isLoggedIn, setIsLoggedIn]= useState()\r\n\r\nuseEffect(() => {\r\n  let token = localStorage.getItem('tokenLibrasPTB');\r\n  const getLogin = async () => {\r\n    const response = await axios.get(\r\n      \"http://localhost:3001/login\", { params: { token } }\r\n    );\r\n    setIsLoggedIn(response.data.msg);\r\n  console.log(isLoggedIn)\r\n  };\r\n  getLogin();\r\n}, []);\r\nif (isLoggedIn === 'loggedIn') {\r\n header = <HeaderOne logged={true}></HeaderOne>\r\n  } else {\r\nheader = <HeaderOne logged={false}></HeaderOne>\r\n  }\r\n  return (\r\n    <>\r\n      {header}\r\n      <Banner>\r\n        <Title>\r\n          <h1>Crie questões para o aplicativo LIBRAS-PTB!</h1>\r\n          <h2>Basta fazer login para começar a desenvolver!</h2>\r\n        </Title>\r\n        <img src=\"https://drive.google.com/uc?id=1JJYSNQ5xjSx8QYRRDDd7OtoiN1W7_9yS\" />\r\n      </Banner>\r\n      <BannerCards>\r\n        {cardsContent.map((cardsContent) => {\r\n          return (\r\n            <Card\r\n              image={cardsContent.image}\r\n              title={cardsContent.title}\r\n              subtitle={cardsContent.subtitle}\r\n              link={cardsContent.link}\r\n            />\r\n          );\r\n        })}\r\n      </BannerCards>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SplashScreen;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\form\\form.js",["183","184","185","186","187","188","189","190","191"],"import React, { useState } from \"react\";\r\nimport \"./form.css\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport axios, {post} from 'axios'\r\nconst   token= localStorage.getItem(\"token\");\r\n\r\nconst categ= new Array()\r\nconst printAddress = async () => {\r\nconst a=  await axios.get('http://localhost:3001/categoria')\r\n\r\nfor(let i=0; i<a.data.length; i++){  \r\ncateg.push(a.data[i].nome)\r\n//document.querySelector('datalist').innerHTML+=`<option value=${categ[i]}></option>` \r\n}\r\n\r\ncallPrintAdress()\r\n};\r\n\r\nfunction callPrintAdress(){\r\n  for(let i=0; i< categ.length;i++){\r\n    if(document.querySelector('datalist')!=null){\r\n    document.querySelector('datalist').innerHTML+=`<option value=\"${categ[i]}\"></option>`;\r\n  }\r\n  \r\n}\r\n}\r\nprintAddress()\r\n\r\nfunction Home() {\r\n  let formData;\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [categoria, setCategoria] = useState(\"\")\r\n  const [imagem, setImagem] = useState(\"\");  \r\n  let x;\r\n\r\n\r\nlet categorias= new Array()\r\n\r\n  const enviaDados = async (e) => {\r\n    console.log('enviando');\r\n    e.preventDefault(); \r\n    \r\n    axios //faz chamada http\r\n    .post('http://localhost:3001/questao', \r\n    {\r\n     token, tipo,categoria   // nome: nome\r\n    })\r\n      .then((response) => {\r\n        \r\n      \r\n      })\r\n      .catch((error) => {\r\n        console.log('erro enviando formulario')\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const enviaImagem = async (e) => {\r\n      console.log(imagem);\r\n      e.preventDefault(); \r\n      \r\n      axios //faz chamada http\r\n      .post('http://localhost:3001/imagem', \r\n      {\r\n      file: imagem // nome: nome\r\n      })\r\n        .then((response) => {\r\n          \r\n        \r\n        })\r\n        .catch((error) => {\r\n          console.log('erro enviando formulario')\r\n          console.log(error);\r\n        });\r\n      }\r\n      /*\r\n    function onChange(e){\r\n   let files=e.target.files;\r\n  let reader= new FileReader();\r\n  reader.readAsDataURL(files[0]);    \r\n  reader.onload =(e) =>{\r\n    console.warn(e.target.result)\r\n    const url=\"http://localhost:3001/\"\r\n    formData={file: e.target.result}\r\n  //  var a = document.createElement(\"a\"); //Create <a>\r\n   // a.href = \"data:image/png;base64,\" +e.target.result //Image Base64 Goes here\r\n    //a.download = \"Image.png\"; //File name Here\r\n  //  a.click(); //Downloaded file\r\n  }\r\n\r\n  var link = document.createElement('a');\r\n*/\r\n  //link.href = e;\r\n//link.download = 'Download.jpg';\r\n//document.body.appendChild(link);\r\n//link.click();\r\n//document.body.removeChild(link);\r\n  \r\n  return (\r\n    <div>\r\n      <HeaderOne one=\"-\"></HeaderOne>\r\n      <br />\r\n      <br />\r\n      <div className=\"topic\">\r\n        <h1>Escolha o tipo de questão</h1>\r\n        <br />\r\n        <div>\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"AC\"\r\n            onChange={(v) => setTipo('AC')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(0)}\r\n          />{\" \"}\r\n          Associar Colunas\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"OP\"\r\n            onChange={(v) => setTipo('OP')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(1)}\r\n          />\r\n          Ordenar palavras de uma frase\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"DPV\"\r\n            onChange={(v) => setTipo('DPV')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(2)}\r\n          />\r\n          Digitar palavra da imagem\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"OP\"\r\n            onChange={(v) => setTipo('OP')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(3)}\r\n          />\r\n          Digitar palavra do vídeo\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"DPF\"\r\n            onChange={(v) => setTipo('DPF')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(4)}\r\n          />\r\n          Digitar frase de um vídeo em libras\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"PLFD\"\r\n            onChange={(v) => setTipo('PLFD')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(5)}\r\n          />\r\n          Preencher lacuna da frase digitando\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"PLFA\"\r\n            onChange={(v) => setTipo('PLFA')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(6)}\r\n          />\r\n          Preencher lacuna da frase com alternativa\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"MAPV\"\r\n            onChange={(v) => setTipo('MAPV')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(7)}\r\n          />\r\n          Marcar alternativa da palavra do vídeo\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"MAPI\"\r\n            onChange={(v) => setTipo('MAPI')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(8)}\r\n          />\r\n          Marcar alternativa da palavra da imagem\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"MAF\"\r\n            onChange={(v) => setTipo('MAF')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(9)}\r\n          />\r\n          Marcar alternativa da frase\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"topic3\">\r\n        <h1>Selecione a categoria</h1>\r\n        <br />\r\n        </div>\r\n        <input list=\"datalist\"/>\r\n\r\n\r\n        <datalist id=\"datalist\">\r\n  \r\n  </datalist>\r\n  \r\n      \r\n      <br />\r\n      <br />\r\n      <div className=\"topic3\">\r\n        <div className=\"topic3\" id=\"frase\">\r\n          <h1>Frase</h1>\r\n\r\n          <input type=\"text\" name=\"frase\" placeholder=\"Frase\" />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id=\"colunas\">\r\n          <h1>Colunas</h1>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna2\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 2\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna3\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 3\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna4\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 4\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna5\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 5\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna6\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 1\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna7\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 2\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna8\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 3\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna9\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 4\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna10\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 5\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id=\"alternativas\">\r\n          <h1>Alternativas</h1>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"altcerta\"\r\n            id=\"altcerta\"\r\n            class=\"altcerta\"\r\n            placeholder=\"Alternativa correta\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada1\"\r\n            id=\"alterrada1\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada2\"\r\n            id=\"alterrada2\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada3\"\r\n            id=\"alterrada3\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada4\"\r\n            id=\"alterrada4\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id=\"resposta\">\r\n          <h1>Resposta correta</h1>\r\n\r\n          <input type=\"text\" name=\"resposta\" placeholder=\"resposta\" />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id='url'>\r\n            <h1>Imagem/vídeo</h1>\r\n            <input type='file' name='url' onChange={(v) => setImagem(v)}></input>\r\n            <button onClick={enviaImagem} value=\"Enviar\">\r\n          Enviar{\" \"}\r\n          </button>\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <button onClick={enviaDados} value=\"Enviar\">\r\n          Enviar{\" \"}\r\n          </button>\r\n      </div>\r\n     \r\n      \r\n    </div>\r\n  );\r\n  function desmarcar(num) {\r\n    let frase = document.getElementById(\"frase\");\r\n    let alternativas = document.getElementById(\"alternativas\");\r\n    let colunas = document.getElementById(\"colunas\");\r\n    var resposta= document.getElementById(\"resposta\");\r\n    \r\n    let url = document.getElementById(\"url\");\r\n   \r\n    //desmarca todos os botoes menos o num\r\n    let tipo;\r\n    for (let i = 0; i < 10; i++) {\r\n      if (i !== num) {\r\n        tipo = document.getElementsByClassName(\"Tipo\")[i];\r\n        tipo.checked = false;\r\n      }\r\n    }\r\n    switch (num) {\r\n      case 0:\r\n        frase.style.display = \"none\";\r\n        alternativas.style.display = \"none\";\r\n        colunas.style.display = \"unset\";\r\n        resposta.style.display=\"none\"\r\n        url.style.display = \"none\"\r\n        break;\r\n      case 1:\r\n\r\n      case \"Papayas\":\r\n        console.log(\"Mangoes and papayas are $2.79 a pound.\");\r\n        // expected output: \"Mangoes and papayas are $2.79 a pound.\"\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarPalavra\\index.js",["192","193","194","195","196","197"],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\contato\\contato.js",["198","199","200"],"import React, { useState } from \"react\";\r\nimport axios, { post } from 'axios'\r\nimport HeaderOne from '../header/index.js'\r\nimport './contato.css'\r\n\r\nexport default function Contato() {\r\n   return (\r\n      <div>\r\n         <HeaderOne></HeaderOne>\r\n         <br></br>\r\n         <div id=\"Texto\">\r\n            <p>O LibrasPTB é um aplicativo advindo de um projeto do IFRS Campus Rio Grande coordenado pela professora e doutora Raquel de Miranda Barbosa e desenvolvido por Adriele Colossi.</p>\r\n         </div>\r\n         <br></br>\r\n         <div id=\"Contato\">Contatos:<br></br>Email: librasptb@gmail.com</div>\r\n      </div>\r\n   );\r\n}\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaCorreta\\index.js",["201","202","203","204","205","206","207","208","209","210","211","212","213","214"],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formOrdenarFrase\\index.js",["215","216","217","218"],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaFraseCorreta\\index.js",["219","220","221"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios, { post } from \"axios\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport { DivInputForm, Title, DivSelect} from \"./styles.js\";\r\nimport ButtonJS from \"../components/Input/Button/index.js\";\r\nimport InputJS from \"../components/Input/index.js\";\r\nfunction FormAlternativaFraseCorreta() {\r\n  const categorias = [\r\n    {\r\n      name: \"Matemática\",\r\n    },\r\n    {\r\n      name: \"Biologia\",\r\n    }\r\n  ]\r\n  \r\n  let header;\r\n  const [isLoggedIn, setIsLoggedIn]= useState()\r\n  useEffect(() => {\r\n    let token = localStorage.getItem('tokenLibrasPTB');\r\n    const getLogin = async () => {\r\n      const response = await axios.get(\r\n        \"http://localhost:3001/login\", { params: { token } }\r\n      );\r\n      setIsLoggedIn(response.data.msg);\r\n    console.log(isLoggedIn)\r\n    };\r\n    getLogin();\r\n  }, []);\r\n  if (isLoggedIn === 'loggedIn') {\r\n   header = <HeaderOne logged={true}></HeaderOne>\r\n    } else {\r\n  header = <HeaderOne logged={false}></HeaderOne>\r\n    }\r\n\r\nif(isLoggedIn=='loggedIn'){\r\n  return (\r\n    <>\r\n      <HeaderOne logged={true}></HeaderOne>\r\n      <Title fontSize={2.5} color={\"#000000\"}>\r\n        Marcar alternativa da frase correta\r\n      </Title>\r\n      <Title fontSize={1} color={\"#7A7A7A\"}>\r\n        Modelo em que se marca uma alternativa correta de qual é a frase\r\n      </Title>\r\n\r\n      <DivInputForm>\r\n        <DivSelect>\r\n          <label for=\"categoria\">Categoria</label>\r\n          <select\r\n            id=\"categoria\"\r\n            style={{ marginLeft: \"5%\" }}\r\n          >\r\n            {categorias.map((categoria) => {\r\n              return (\r\n                <option key={categoria.nome} value={categoria.id}>\r\n                  {categoria.nome}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <ButtonJS\r\n            onClick={\"\"}\r\n            backgroundColor={\"#8ECAE6\"}\r\n            color={\"#000000\"}\r\n            borderRadius={0}\r\n            name={\"Criar Categoria\"}\r\n          />\r\n        </DivSelect>\r\n      </DivInputForm>\r\n      <DivInputForm>\r\n        <div>\r\n          <label for=\"frase\">Frase</label>\r\n          <InputJS name=\"frase\" type=\"text\" color={\"rgba(142, 202, 230, 0.5)\"}></InputJS>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label for=\"correct\">Alternativa Correta</label>\r\n          <InputJS\r\n            name=\"correct\"\r\n            type=\"text\"\r\n            color={\"rgba(144, 230, 142, 0.5)\"}\r\n          ></InputJS>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label for=\"wrong1\">Alternativa Errada</label>\r\n          <InputJS\r\n            name=\"wrong1\"\r\n            type=\"text\"\r\n            color={\"rgba(252, 65, 65, 0.5)\"}\r\n          ></InputJS>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label for=\"wrong2\">Alternativa Errada</label>\r\n          <InputJS\r\n            name=\"wrong2\"\r\n            type=\"text\"\r\n            color={\"rgba(252, 65, 65, 0.5)\"}\r\n          ></InputJS>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label for=\"wrong3\">Alternativa Errada</label>\r\n          <InputJS\r\n            name=\"wrong3\"\r\n            type=\"text\"\r\n            color={\"rgba(252, 65, 65, 0.5)\"}\r\n          ></InputJS>\r\n        </div>\r\n        <br />\r\n        <div>\r\n          <label for=\"wrong4\">Alternativa Errada</label>\r\n          <InputJS\r\n            name=\"wrong4\"\r\n            type=\"text\"\r\n            color={\"rgba(252, 65, 65, 0.5)\"}\r\n          ></InputJS>\r\n        </div>\r\n        <br />\r\n        <ButtonJS\r\n          onClick={\"\"}\r\n          backgroundColor={\"#219EBC\"}\r\n          color={\"#FFFF\"}\r\n          borderRadius={0}\r\n          name={\"Criar Questão\"}\r\n        />\r\n      </DivInputForm>\r\n    </>\r\n  );}else{\r\n    return(<div>{header}<p>Faça login primeiro</p></div>)\r\n  }\r\n}\r\nexport default FormAlternativaFraseCorreta;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formMarcarLacuna\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAssociarColunas\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarLacuna\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaCorreta\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formAlternativaFraseCorreta\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\header\\index.js",["222"],"import React from \"react\";\r\nimport { Header } from \"./styles\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction HeaderOne(props) {\r\n\r\nfunction removeStorage(){\r\n  localStorage.removeItem('tokenLibrasPTB');\r\n  localStorage.removeItem('user');\r\n  window.location.href= \"http://localhost:3000/login\"\r\n}\r\n  if (props.logged == true) {\r\n    return (\r\n      <>\r\n        <Header>\r\n          <Link to=\"/home\">Home</Link>\r\n          <button onClick={removeStorage}>Logout</button>\r\n        </Header>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Header>\r\n          <Link to=\"/login\">Login</Link>\r\n        </Header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderOne;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\index.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Button\\index.js",["223","224","225","226","227","228"],"import React, { useState, useEffect } from \"react\";\r\nimport {Button} from \"./styles\";\r\nimport axios, { post } from \"axios\";\r\nimport Modal from \"react-modal\";\r\nconst token = localStorage.getItem(\"token\");\r\n\r\nfunction ButtonJS(props) {\r\n    return (\r\n        <Button \r\n        onClick={props.onClick}\r\n        backgroundColor={props.backgroundColor}\r\n        color={props.color}\r\n        border-radius={props.borderRadius}>\r\n        {props.name}\r\n        </Button>\r\n    );\r\n}\r\nexport default ButtonJS;","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\splashScreen\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\login\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formOrdenarFrase\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\formDigitarPalavra\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\footer\\index.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\header\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Button\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Card\\index.js",["229"],"import React from \"react\";\r\nimport { DivCard, Div } from \"./styles\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <Div>\r\n    <Link to={props.link}>\r\n      <DivCard>\r\n        <img src={props.image} />\r\n        <div>\r\n          <h3>{props.title}</h3>\r\n          <h6>{props.subtitle}</h6>\r\n        </div>\r\n      </DivCard>\r\n    </Link>\r\n    </Div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\footer\\styles.js",[],"C:\\Users\\Adriele\\Downloads\\librasptb\\librasptbfrontend\\src\\components\\Input\\Card\\styles.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":29,"column":6,"nodeType":"236","endLine":29,"endColumn":8,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":36,"column":14,"nodeType":"240","messageId":"241","endLine":36,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":4,"column":17,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"246","line":12,"column":16,"nodeType":"244","messageId":"245","endLine":12,"endColumn":23},{"ruleId":"242","severity":1,"message":"247","line":13,"column":21,"nodeType":"244","messageId":"245","endLine":13,"endColumn":33},{"ruleId":"242","severity":1,"message":"248","line":14,"column":19,"nodeType":"244","messageId":"245","endLine":14,"endColumn":29},{"ruleId":"242","severity":1,"message":"249","line":15,"column":19,"nodeType":"244","messageId":"245","endLine":15,"endColumn":29},{"ruleId":"242","severity":1,"message":"250","line":16,"column":19,"nodeType":"244","messageId":"245","endLine":16,"endColumn":29},{"ruleId":"242","severity":1,"message":"251","line":17,"column":19,"nodeType":"244","messageId":"245","endLine":17,"endColumn":29},{"ruleId":"242","severity":1,"message":"252","line":18,"column":19,"nodeType":"244","messageId":"245","endLine":18,"endColumn":29},{"ruleId":"242","severity":1,"message":"253","line":19,"column":24,"nodeType":"244","messageId":"245","endLine":19,"endColumn":39},{"ruleId":"242","severity":1,"message":"254","line":20,"column":24,"nodeType":"244","messageId":"245","endLine":20,"endColumn":39},{"ruleId":"242","severity":1,"message":"255","line":21,"column":24,"nodeType":"244","messageId":"245","endLine":21,"endColumn":39},{"ruleId":"242","severity":1,"message":"256","line":22,"column":24,"nodeType":"244","messageId":"245","endLine":22,"endColumn":39},{"ruleId":"242","severity":1,"message":"257","line":23,"column":24,"nodeType":"244","messageId":"245","endLine":23,"endColumn":39},{"ruleId":"242","severity":1,"message":"258","line":25,"column":9,"nodeType":"244","messageId":"245","endLine":25,"endColumn":19},{"ruleId":"242","severity":1,"message":"259","line":39,"column":9,"nodeType":"244","messageId":"245","endLine":39,"endColumn":20},{"ruleId":"234","severity":1,"message":"235","line":68,"column":6,"nodeType":"236","endLine":68,"endColumn":8,"suggestions":"260"},{"ruleId":"238","severity":1,"message":"239","line":75,"column":14,"nodeType":"240","messageId":"241","endLine":75,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":3,"column":17,"nodeType":"244","messageId":"245","endLine":3,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":28,"column":6,"nodeType":"236","endLine":28,"endColumn":8,"suggestions":"261"},{"ruleId":"238","severity":1,"message":"239","line":35,"column":14,"nodeType":"240","messageId":"241","endLine":35,"endColumn":16},{"ruleId":"242","severity":1,"message":"262","line":2,"column":8,"nodeType":"244","messageId":"245","endLine":2,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":2,"column":16,"nodeType":"244","messageId":"245","endLine":2,"endColumn":20},{"ruleId":"242","severity":1,"message":"263","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":16},{"ruleId":"242","severity":1,"message":"264","line":2,"column":10,"nodeType":"244","messageId":"245","endLine":2,"endColumn":32},{"ruleId":"242","severity":1,"message":"265","line":2,"column":34,"nodeType":"244","messageId":"245","endLine":2,"endColumn":40},{"ruleId":"234","severity":1,"message":"235","line":50,"column":6,"nodeType":"236","endLine":50,"endColumn":8,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":88,"column":9,"nodeType":"269","endLine":88,"endColumn":87},{"ruleId":"234","severity":1,"message":"235","line":65,"column":4,"nodeType":"236","endLine":65,"endColumn":6,"suggestions":"270"},{"ruleId":"267","severity":1,"message":"268","line":79,"column":9,"nodeType":"269","endLine":79,"endColumn":87},{"ruleId":"242","severity":1,"message":"243","line":4,"column":16,"nodeType":"244","messageId":"245","endLine":4,"endColumn":20},{"ruleId":"271","severity":1,"message":"272","line":7,"column":14,"nodeType":"273","messageId":"274","endLine":7,"endColumn":25},{"ruleId":"242","severity":1,"message":"275","line":30,"column":7,"nodeType":"244","messageId":"245","endLine":30,"endColumn":15},{"ruleId":"242","severity":1,"message":"247","line":32,"column":21,"nodeType":"244","messageId":"245","endLine":32,"endColumn":33},{"ruleId":"242","severity":1,"message":"276","line":34,"column":7,"nodeType":"244","messageId":"245","endLine":34,"endColumn":8},{"ruleId":"242","severity":1,"message":"277","line":37,"column":5,"nodeType":"244","messageId":"245","endLine":37,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":37,"column":17,"nodeType":"273","messageId":"274","endLine":37,"endColumn":28},{"ruleId":"278","severity":1,"message":"279","line":370,"column":5,"nodeType":"280","messageId":"281","endLine":384,"endColumn":6},{"ruleId":"282","severity":1,"message":"283","line":380,"column":7,"nodeType":"284","messageId":"285","endLine":383,"endColumn":15},{"ruleId":"242","severity":1,"message":"286","line":2,"column":17,"nodeType":"244","messageId":"245","endLine":2,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":4,"column":17,"nodeType":"244","messageId":"245","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"287","line":72,"column":10,"nodeType":"244","messageId":"245","endLine":72,"endColumn":19},{"ruleId":"242","severity":1,"message":"288","line":72,"column":21,"nodeType":"244","messageId":"245","endLine":72,"endColumn":33},{"ruleId":"234","severity":1,"message":"235","line":95,"column":6,"nodeType":"236","endLine":95,"endColumn":8,"suggestions":"289"},{"ruleId":"238","severity":1,"message":"239","line":102,"column":14,"nodeType":"240","messageId":"241","endLine":102,"endColumn":16},{"ruleId":"242","severity":1,"message":"290","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"262","line":2,"column":8,"nodeType":"244","messageId":"245","endLine":2,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":2,"column":17,"nodeType":"244","messageId":"245","endLine":2,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":7,"column":17,"nodeType":"244","messageId":"245","endLine":7,"endColumn":21},{"ruleId":"242","severity":1,"message":"291","line":35,"column":9,"nodeType":"244","messageId":"245","endLine":35,"endColumn":20},{"ruleId":"242","severity":1,"message":"292","line":71,"column":10,"nodeType":"244","messageId":"245","endLine":71,"endColumn":21},{"ruleId":"242","severity":1,"message":"293","line":72,"column":12,"nodeType":"244","messageId":"245","endLine":72,"endColumn":21},{"ruleId":"242","severity":1,"message":"294","line":75,"column":12,"nodeType":"244","messageId":"245","endLine":75,"endColumn":22},{"ruleId":"242","severity":1,"message":"295","line":80,"column":25,"nodeType":"244","messageId":"245","endLine":80,"endColumn":41},{"ruleId":"242","severity":1,"message":"296","line":81,"column":27,"nodeType":"244","messageId":"245","endLine":81,"endColumn":45},{"ruleId":"242","severity":1,"message":"297","line":82,"column":25,"nodeType":"244","messageId":"245","endLine":82,"endColumn":41},{"ruleId":"242","severity":1,"message":"298","line":83,"column":26,"nodeType":"244","messageId":"245","endLine":83,"endColumn":43},{"ruleId":"242","severity":1,"message":"299","line":84,"column":28,"nodeType":"244","messageId":"245","endLine":84,"endColumn":47},{"ruleId":"242","severity":1,"message":"287","line":85,"column":10,"nodeType":"244","messageId":"245","endLine":85,"endColumn":19},{"ruleId":"242","severity":1,"message":"288","line":85,"column":21,"nodeType":"244","messageId":"245","endLine":85,"endColumn":33},{"ruleId":"234","severity":1,"message":"235","line":108,"column":6,"nodeType":"236","endLine":108,"endColumn":8,"suggestions":"300"},{"ruleId":"238","severity":1,"message":"239","line":115,"column":14,"nodeType":"240","messageId":"241","endLine":115,"endColumn":16},{"ruleId":"242","severity":1,"message":"301","line":8,"column":7,"nodeType":"244","messageId":"245","endLine":8,"endColumn":12},{"ruleId":"242","severity":1,"message":"302","line":43,"column":13,"nodeType":"244","messageId":"245","endLine":43,"endColumn":18},{"ruleId":"234","severity":1,"message":"235","line":92,"column":6,"nodeType":"236","endLine":92,"endColumn":8,"suggestions":"303"},{"ruleId":"238","severity":1,"message":"239","line":99,"column":14,"nodeType":"240","messageId":"241","endLine":99,"endColumn":16},{"ruleId":"242","severity":1,"message":"243","line":3,"column":17,"nodeType":"244","messageId":"245","endLine":3,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":30,"column":6,"nodeType":"236","endLine":30,"endColumn":8,"suggestions":"304"},{"ruleId":"238","severity":1,"message":"239","line":37,"column":14,"nodeType":"240","messageId":"241","endLine":37,"endColumn":16},{"ruleId":"238","severity":1,"message":"239","line":14,"column":20,"nodeType":"240","messageId":"241","endLine":14,"endColumn":22},{"ruleId":"242","severity":1,"message":"290","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"305","line":1,"column":27,"nodeType":"244","messageId":"245","endLine":1,"endColumn":36},{"ruleId":"242","severity":1,"message":"262","line":3,"column":8,"nodeType":"244","messageId":"245","endLine":3,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":3,"column":17,"nodeType":"244","messageId":"245","endLine":3,"endColumn":21},{"ruleId":"242","severity":1,"message":"306","line":4,"column":8,"nodeType":"244","messageId":"245","endLine":4,"endColumn":13},{"ruleId":"242","severity":1,"message":"301","line":5,"column":7,"nodeType":"244","messageId":"245","endLine":5,"endColumn":12},{"ruleId":"267","severity":1,"message":"268","line":10,"column":9,"nodeType":"269","endLine":10,"endColumn":34},"no-native-reassign",["307"],"no-negated-in-lhs",["308"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["309"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'post' is defined but never used.","Identifier","unusedVar","'setTipo' is assigned a value but never used.","'setCategoria' is assigned a value but never used.","'setImagem1' is assigned a value but never used.","'setImagem2' is assigned a value but never used.","'setImagem3' is assigned a value but never used.","'setImagem4' is assigned a value but never used.","'setImagem5' is assigned a value but never used.","'setAlternativa1' is assigned a value but never used.","'setAlternativa2' is assigned a value but never used.","'setAlternativa3' is assigned a value but never used.","'setAlternativa4' is assigned a value but never used.","'setAlternativa5' is assigned a value but never used.","'enviaDados' is assigned a value but never used.","'enviaImagem' is assigned a value but never used.",["310"],["311"],"'axios' is defined but never used.","'Dropzone' is defined but never used.","'unmountComponentAtNode' is defined but never used.","'render' is defined but never used.",["312"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["313"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'formData' is defined but never used.","'x' is defined but never used.","'categorias' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'Button' is defined but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.",["314"],"'useState' is defined but never used.","'criaQuestao' is assigned a value but never used.","'modalIsOpen' is assigned a value but never used.","'openModal' is defined but never used.","'closeModal' is defined but never used.","'setNomeCategoria' is assigned a value but never used.","'setImagemCategoria' is assigned a value but never used.","'setImagemQuestao' is assigned a value but never used.","'setPalavraQuestao' is assigned a value but never used.","'setCategoriaQuestao' is assigned a value but never used.",["315"],"'token' is assigned a value but never used.","'midia' is assigned a value but never used.",["316"],["317"],"'useEffect' is defined but never used.","'Modal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"318","fix":"319"},{"desc":"318","fix":"320"},{"desc":"318","fix":"321"},{"desc":"318","fix":"322"},{"desc":"318","fix":"323"},{"desc":"318","fix":"324"},{"desc":"318","fix":"325"},{"desc":"318","fix":"326"},{"desc":"318","fix":"327"},"Update the dependencies array to be: [isLoggedIn]",{"range":"328","text":"329"},{"range":"330","text":"329"},{"range":"331","text":"329"},{"range":"332","text":"329"},{"range":"333","text":"329"},{"range":"334","text":"329"},{"range":"335","text":"329"},{"range":"336","text":"329"},{"range":"337","text":"329"},[833,835],"[isLoggedIn]",[2049,2051],[844,846],[1491,1493],[2425,2427],[3187,3189],[3498,3500],[2940,2942],[880,882]]