[{"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\index.js":"1","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\App.js":"2","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\reportWebVitals.js":"3","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\contato\\contato.js":"4","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\form\\formimg.js":"5","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\form\\form.js":"6","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\splashScreen\\index.js":"7","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\header\\index.js":"8","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\header\\styles.js":"9","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\footer\\index.js":"10","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\footer\\styles.js":"11","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\splashScreen\\styles.js":"12","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\components\\Card\\index.js":"13","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\components\\Card\\styles.js":"14","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\login\\login.js":"15","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\login\\styles.js":"16"},{"size":500,"mtime":1636575381903,"results":"17","hashOfConfig":"18"},{"size":780,"mtime":1654973426928,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1634148776012,"results":"20","hashOfConfig":"18"},{"size":633,"mtime":1654971308287,"results":"21","hashOfConfig":"18"},{"size":3201,"mtime":1641934630157,"results":"22","hashOfConfig":"18"},{"size":10353,"mtime":1654971308287,"results":"23","hashOfConfig":"18"},{"size":3427,"mtime":1654982785127,"results":"24","hashOfConfig":"18"},{"size":501,"mtime":1654976782823,"results":"25","hashOfConfig":"18"},{"size":397,"mtime":1654976779612,"results":"26","hashOfConfig":"18"},{"size":339,"mtime":1654985439968,"results":"27","hashOfConfig":"18"},{"size":260,"mtime":1654986448129,"results":"28","hashOfConfig":"18"},{"size":1011,"mtime":1654988445904,"results":"29","hashOfConfig":"18"},{"size":292,"mtime":1654978313024,"results":"30","hashOfConfig":"18"},{"size":2241,"mtime":1654988250529,"results":"31","hashOfConfig":"18"},{"size":2000,"mtime":1654986888573,"results":"32","hashOfConfig":"18"},{"size":984,"mtime":1654986582511,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"5vx8pm",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\index.js",[],["73","74"],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\App.js",[],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\contato\\contato.js",["75","76","77"],"import React, { useState } from \"react\";\r\nimport axios, {post} from 'axios'\r\nimport HeaderOne from '../header/index.js'\r\nimport './contato.css'\r\n\r\nexport default function Contato() {\r\n//  \r\n      return (\r\n    <div>\r\n    <HeaderOne></HeaderOne>\r\n    <br></br>\r\n   <div id=\"Texto\">\r\n       <p>O LibrasPTB é um aplicativo advindo de um projeto do IFRS Campus Rio Grande coordenado pela professora e doutora Raquel de Miranda Barbosa e desenvolvido por Adriele Colossi.</p>\r\n       </div>\r\n       <br></br>\r\n       <div id=\"Contato\">Contatos:<br></br>Email: librasptb@gmail.com</div>\r\n       \r\n     \r\n    </div>\r\n       );\r\n      }\r\n  ","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\form\\formimg.js",["78","79","80"],"import React, { useState } from \"react\";\r\nimport axios, {post} from 'axios'\r\n\r\nimport Dropzone from \"react-dropzone\";\r\n\r\nexport default function App() {\r\n  const [file, setFile] = useState();\r\n/*\r\n  const enviaDados = async (e) => {\r\n    console.log('enviando');\r\n    e.preventDefault(); \r\n    const requestConfig = {\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    }\r\n    axios.post('http://localhost:3001/imagem', {file: file}, requestConfig);\r\n   \r\n    }\r\n    \r\n    import axios from \"axios\";\r\n*/\r\n\r\n/*\r\nconst enviaDados = async (e) => {\r\n  e.preventDefault()\r\n  const fd= new FormData()\r\n  fd.append('file', file,'file')\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'http://localhost:3003/imagem',\r\n    headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n    data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"image (1).jpg\"\\r\\nContent-Type: image/jpeg\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n'\r\n  };\r\naxios.post('http://localhost:3001/imagem', fd, options).then(res =>{\r\n  console.log(res)\r\n})\r\n}\r\n*/\r\n\r\n/*\r\n\r\n\r\n  var options = {\r\n    method: 'POST',\r\n    url: 'http://localhost:3003/imagem',\r\n    headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n    data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"image (1).jpg\"\\r\\nContent-Type: image/jpeg\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n'\r\n  };\r\n  \r\n  axios.request(options).then(function (response) {\r\n    console.log(response.data);\r\n  }).catch(function (error) {\r\n    console.error(error);\r\n  });\r\n*/\r\nvar axios = require(\"axios\").default;\r\nasync function enviaDados(e){\r\n\r\n  e.preventDefault()\r\n  const fd = new FormData()\r\n  fd.append('file', file)\r\n  console.log(file)\r\n  const response = await axios.post('http://localhost:3001/imagem', fd)\r\nalert(response.status);\r\n\r\n\r\n}\r\n\r\n/*\r\nconst response = await fetch('http://localhost:3001/imagem',{\r\n  method: 'POST',\r\n  headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n  body: form\r\n})\r\n*/\r\n\r\n/*\r\nvar options = {\r\n  method: 'POST',\r\n  url: 'http://localhost:3001/imagem',\r\n  headers: {'Content-Type': 'multipart/form-data; boundary=---011000010111000001101001'},\r\n  data: '-----011000010111000001101001\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"image (1).jpg\"\\r\\nContent-Type: image/jpeg\\r\\n\\r\\n\\r\\n-----011000010111000001101001--\\r\\n'\r\n};\r\n\r\naxios.request(options).then(function (response) {\r\n  console.log(response.data);\r\n}).catch(function (error) {\r\n  console.error(error);\r\n});\r\n}\r\n*/\r\n/*\r\n<form  method=\"post\" enctype=\"multipart/form-data\">\r\n  <input type=\"file\" name=\"file\" id=\"file\" onChange={(v)=> setFile(v.target.files[0])} />\r\n  <input type=\"submit\" value=\"submit\" onClick={enviaDados}/>\r\n</form>\r\n*/\r\n\r\n\r\n    return (\r\n  \r\n <form enctype=\"multipart/form-data\" method=\"POST\"> \r\n <input type=\"file\" name=\"myImage\" accept=\"image/*\"  onChange={(v)=> setFile('')}/>\r\n <input type=\"submit\" value=\"Upload Photo\" onClick={enviaDados} />\r\n</form>\r\n     );\r\n    }\r\n","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\form\\form.js",["81","82","83","84","85","86","87","88","89"],"import React, { useState } from \"react\";\r\nimport \"./form.css\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport axios, {post} from 'axios'\r\nconst   token= localStorage.getItem(\"token\");\r\n\r\nconst categ= new Array()\r\nconst printAddress = async () => {\r\nconst a=  await axios.get('http://localhost:3001/categoria')\r\n\r\nfor(let i=0; i<a.data.length; i++){  \r\ncateg.push(a.data[i].nome)\r\n//document.querySelector('datalist').innerHTML+=`<option value=${categ[i]}></option>` \r\n}\r\nconsole.log(categ)\r\ncallPrintAdress()\r\n};\r\n\r\nfunction callPrintAdress(){\r\n  for(let i=0; i< categ.length;i++){\r\n    if(document.querySelector('datalist')!=null){\r\n    document.querySelector('datalist').innerHTML+=`<option value=\"${categ[i]}\"></option>`;\r\n  }\r\n  \r\n}\r\n}\r\nprintAddress()\r\n\r\nfunction Home() {\r\n  let formData;\r\n  const [tipo, setTipo] = useState(\"\");\r\n  const [categoria, setCategoria] = useState(\"\")\r\n  const [imagem, setImagem] = useState(\"\");  \r\n  let x;\r\n\r\n\r\nlet categorias= new Array()\r\n\r\n  const enviaDados = async (e) => {\r\n    console.log('enviando');\r\n    e.preventDefault(); \r\n    \r\n    axios //faz chamada http\r\n    .post('http://localhost:3001/questao', \r\n    {\r\n     token, tipo,categoria   // nome: nome\r\n    })\r\n      .then((response) => {\r\n        \r\n      \r\n      })\r\n      .catch((error) => {\r\n        console.log('erro enviando formulario')\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    const enviaImagem = async (e) => {\r\n      console.log(imagem);\r\n      e.preventDefault(); \r\n      \r\n      axios //faz chamada http\r\n      .post('http://localhost:3001/imagem', \r\n      {\r\n      file: imagem // nome: nome\r\n      })\r\n        .then((response) => {\r\n          \r\n        \r\n        })\r\n        .catch((error) => {\r\n          console.log('erro enviando formulario')\r\n          console.log(error);\r\n        });\r\n      }\r\n      /*\r\n    function onChange(e){\r\n   let files=e.target.files;\r\n  let reader= new FileReader();\r\n  reader.readAsDataURL(files[0]);    \r\n  reader.onload =(e) =>{\r\n    console.warn(e.target.result)\r\n    const url=\"http://localhost:3001/\"\r\n    formData={file: e.target.result}\r\n  //  var a = document.createElement(\"a\"); //Create <a>\r\n   // a.href = \"data:image/png;base64,\" +e.target.result //Image Base64 Goes here\r\n    //a.download = \"Image.png\"; //File name Here\r\n  //  a.click(); //Downloaded file\r\n  }\r\n\r\n  var link = document.createElement('a');\r\n*/\r\n  //link.href = e;\r\n//link.download = 'Download.jpg';\r\n//document.body.appendChild(link);\r\n//link.click();\r\n//document.body.removeChild(link);\r\n  \r\n  return (\r\n    <div>\r\n      <HeaderOne one=\"-\"></HeaderOne>\r\n      <br />\r\n      <br />\r\n      <div className=\"topic\">\r\n        <h1>Escolha o tipo de questão</h1>\r\n        <br />\r\n        <div>\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"AC\"\r\n            onChange={(v) => setTipo('AC')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(0)}\r\n          />{\" \"}\r\n          Associar Colunas\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"OP\"\r\n            onChange={(v) => setTipo('OP')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(1)}\r\n          />\r\n          Ordenar palavras de uma frase\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"DPV\"\r\n            onChange={(v) => setTipo('DPV')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(2)}\r\n          />\r\n          Digitar palavra da imagem\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"OP\"\r\n            onChange={(v) => setTipo('OP')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(3)}\r\n          />\r\n          Digitar palavra do vídeo\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"DPF\"\r\n            onChange={(v) => setTipo('DPF')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(4)}\r\n          />\r\n          Digitar frase de um vídeo em libras\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"PLFD\"\r\n            onChange={(v) => setTipo('PLFD')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(5)}\r\n          />\r\n          Preencher lacuna da frase digitando\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"PLFA\"\r\n            onChange={(v) => setTipo('PLFA')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(6)}\r\n          />\r\n          Preencher lacuna da frase com alternativa\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"MAPV\"\r\n            onChange={(v) => setTipo('MAPV')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(7)}\r\n          />\r\n          Marcar alternativa da palavra do vídeo\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"MAPI\"\r\n            onChange={(v) => setTipo('MAPI')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(8)}\r\n          />\r\n          Marcar alternativa da palavra da imagem\r\n          <br />\r\n          <input\r\n            type=\"radio\"\r\n            className=\"Tipo\"\r\n            name=\"MAF\"\r\n            onChange={(v) => setTipo('MAF')}\r\n            value={tipo}\r\n            onClick={() => desmarcar(9)}\r\n          />\r\n          Marcar alternativa da frase\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div className=\"topic3\">\r\n        <h1>Selecione a categoria</h1>\r\n        <br />\r\n        </div>\r\n        <input list=\"datalist\"/>\r\n\r\n\r\n        <datalist id=\"datalist\">\r\n  \r\n  </datalist>\r\n  \r\n      \r\n      <br />\r\n      <br />\r\n      <div className=\"topic3\">\r\n        <div className=\"topic3\" id=\"frase\">\r\n          <h1>Frase</h1>\r\n\r\n          <input type=\"text\" name=\"frase\" placeholder=\"Frase\" />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id=\"colunas\">\r\n          <h1>Colunas</h1>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna2\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 2\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna3\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 3\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna4\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 4\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna5\"\r\n            class=\"coluna\"\r\n            placeholder=\"Alternativa 5\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna6\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 1\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna7\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 2\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna8\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 3\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna9\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 4\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"coluna10\"\r\n            class=\"coluna\"\r\n            placeholder=\"Par da alternativa 5\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id=\"alternativas\">\r\n          <h1>Alternativas</h1>\r\n          <br />\r\n          <input\r\n            type=\"text\"\r\n            name=\"altcerta\"\r\n            id=\"altcerta\"\r\n            class=\"altcerta\"\r\n            placeholder=\"Alternativa correta\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada1\"\r\n            id=\"alterrada1\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada2\"\r\n            id=\"alterrada2\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada3\"\r\n            id=\"alterrada3\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"alterrada4\"\r\n            id=\"alterrada4\"\r\n            class=\"alterrada\"\r\n            placeholder=\"Alternativa errada\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id=\"resposta\">\r\n          <h1>Resposta correta</h1>\r\n\r\n          <input type=\"text\" name=\"resposta\" placeholder=\"resposta\" />\r\n        </div>\r\n\r\n        <div className=\"topic3\" id='url'>\r\n            <h1>Imagem/vídeo</h1>\r\n            <input type='file' name='url' onChange={(v) => setImagem(v)}></input>\r\n            <button onClick={enviaImagem} value=\"Enviar\">\r\n          Enviar{\" \"}\r\n          </button>\r\n        </div>\r\n        <br/>\r\n        <br/>\r\n        <button onClick={enviaDados} value=\"Enviar\">\r\n          Enviar{\" \"}\r\n          </button>\r\n      </div>\r\n     \r\n      \r\n    </div>\r\n  );\r\n  function desmarcar(num) {\r\n    let frase = document.getElementById(\"frase\");\r\n    let alternativas = document.getElementById(\"alternativas\");\r\n    let colunas = document.getElementById(\"colunas\");\r\n    var resposta= document.getElementById(\"resposta\");\r\n    \r\n    let url = document.getElementById(\"url\");\r\n   \r\n    //desmarca todos os botoes menos o num\r\n    let tipo;\r\n    for (let i = 0; i < 10; i++) {\r\n      if (i !== num) {\r\n        tipo = document.getElementsByClassName(\"Tipo\")[i];\r\n        tipo.checked = false;\r\n      }\r\n    }\r\n    switch (num) {\r\n      case 0:\r\n        frase.style.display = \"none\";\r\n        alternativas.style.display = \"none\";\r\n        colunas.style.display = \"unset\";\r\n        resposta.style.display=\"none\"\r\n        url.style.display = \"none\"\r\n        break;\r\n      case 1:\r\n\r\n      case \"Papayas\":\r\n        console.log(\"Mangoes and papayas are $2.79 a pound.\");\r\n        // expected output: \"Mangoes and papayas are $2.79 a pound.\"\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\splashScreen\\index.js",["90"],"import React from \"react\";\r\nimport HeaderOne from \"../header/index.js\";\r\nimport { Banner, BannerCards, Title } from \"./styles\";\r\nimport Card from \"../components/Card\";\r\n\r\n\r\nfunction SplashScreen() {\r\n\r\n    const cardsContent = [\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=1--GhiQKm9xojTvq2yPNwPBFQVLm5b8D6\",\r\n        title: \"Associar colunas\",\r\n        subtitle: \"Modelo em que se associa duas respostas de colunas\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=10QjU09MDS0wRM0v9yoC76TzrLBlROiA8\",\r\n        title: \"Digitar palavra do vídeo em libras \",\r\n        subtitle: \"Modelo em que se digita palavra do vídeo em libras\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=1hw9NhdbmhwB0jcaegsAXYkGYcHnnKUoe\",\r\n        title: \"Ordenar palavras de uma frase\",\r\n        subtitle: \"Modelo em que se ordena palavras de uma frase\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=1t2Z9ZDvr_3QkrmdNE2E6kScG1SWuvB6u\",\r\n        title: \"Digitar palavra da imagem\",\r\n        subtitle: \"Modelo em que se digita o que aparece na imagem\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=1oGJlVFyVLaaPDsyHFvzEqWxiDNwpowp5\",\r\n        title: \"Digitar palavra do vídeo\",\r\n        subtitle: \"Modelo em que se digita o que aparece no vídeo\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=1Mm4--uaVqlMYaUmRZ6Yxi3ZK074m_iW4\",\r\n        title: \"Preencher lacuna da frase digitando\",\r\n        subtitle:\r\n          \"Modelo em que se digita uma palavra para preencher uma frase\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=169RNcKlK-Cbba4sb99Z1LgBL1atLjjd6\",\r\n        title: \"Preencher lacuna da frase com alternativa\",\r\n        subtitle: \"Modelo em que se marca uma alternativa para preencher frase\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=1tJQZFJGFNuwccRpWoSNKtx1SomeLCgRw\",\r\n        title: \"Marcar alternativa da palavra do vídeo\",\r\n        subtitle: \"Modelo em que se marca uma alternativa para palavra do vídeo\",\r\n      },\r\n      {\r\n        image:\r\n          \"https://drive.google.com/uc?id=154KuBWvxTf_cz8A4UacwJNzgoc0MIOTK\",\r\n        title: \"Marcar alternativa da imagem\",\r\n        subtitle: \"Modelo em que se marca o que uma imagem está apresentando\",\r\n      },\r\n      {\r\n        image: \"https://drive.google.com/uc?id=1DrU1sE3HiSclK8mQl9jyWj1dvoKQJxKb\",\r\n        title: \"Marcar alternativa da frase correta\",\r\n        subtitle:\r\n          \"Modelo em que se marca uma alternativa correta de qual é a frase\",\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <HeaderOne logged={false}></HeaderOne>\r\n        <Banner>\r\n          <Title>\r\n            <h1>Crie questões para o aplicativo LIBRAS-PTB!</h1>\r\n            <h2>Basta fazer login para começar a desenvolver!</h2>\r\n          </Title>\r\n          <img src=\"https://drive.google.com/uc?id=1JJYSNQ5xjSx8QYRRDDd7OtoiN1W7_9yS\" />\r\n        </Banner>\r\n        <BannerCards>\r\n          {cardsContent.map((cardsContent) => {\r\n            return (\r\n              <Card\r\n                image={cardsContent.image}\r\n                title={cardsContent.title}\r\n                subtitle={cardsContent.subtitle}\r\n              />\r\n            );\r\n          })}\r\n        </BannerCards>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default SplashScreen;\r\n","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\header\\index.js",["91"],"import React from \"react\";\r\nimport { Header } from \"./styles\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nfunction HeaderOne(props) {\r\n  if (props.logged == true) {\r\n    return (\r\n      <>\r\n        <Header>\r\n          <Link to=\"/home\">Home</Link>\r\n          <Link to=\"/home\">Logout</Link>\r\n        </Header>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Header>\r\n          <Link to=\"/login\">Login</Link>\r\n        </Header>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HeaderOne;\r\n","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\header\\styles.js",[],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\footer\\index.js",[],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\footer\\styles.js",[],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\splashScreen\\styles.js",[],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\components\\Card\\index.js",["92"],"import React from \"react\";\r\nimport { DivCard } from \"./styles\";\r\nfunction Card(props) {\r\n  return (\r\n    <DivCard>\r\n      <img src={props.image} />\r\n      <div>\r\n        <h3>{props.title}</h3>\r\n        <h6>{props.subtitle}</h6>\r\n      </div>\r\n    </DivCard>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\components\\Card\\styles.js",[],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\login\\login.js",["93","94","95"],"C:\\Users\\Adriele\\OneDrive\\Área de Trabalho\\librasptbsite\\librasptb\\librasptbfrontend\\src\\login\\styles.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":25},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":2,"column":16,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"104","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":13},{"ruleId":"100","severity":1,"message":"105","line":2,"column":16,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"106","line":4,"column":8,"nodeType":"102","messageId":"103","endLine":4,"endColumn":16},{"ruleId":"100","severity":1,"message":"105","line":4,"column":16,"nodeType":"102","messageId":"103","endLine":4,"endColumn":20},{"ruleId":"107","severity":1,"message":"108","line":7,"column":14,"nodeType":"109","messageId":"110","endLine":7,"endColumn":25},{"ruleId":"100","severity":1,"message":"111","line":30,"column":7,"nodeType":"102","messageId":"103","endLine":30,"endColumn":15},{"ruleId":"100","severity":1,"message":"112","line":32,"column":21,"nodeType":"102","messageId":"103","endLine":32,"endColumn":33},{"ruleId":"100","severity":1,"message":"113","line":34,"column":7,"nodeType":"102","messageId":"103","endLine":34,"endColumn":8},{"ruleId":"100","severity":1,"message":"114","line":37,"column":5,"nodeType":"102","messageId":"103","endLine":37,"endColumn":15},{"ruleId":"107","severity":1,"message":"108","line":37,"column":17,"nodeType":"109","messageId":"110","endLine":37,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":370,"column":5,"nodeType":"117","messageId":"118","endLine":384,"endColumn":6},{"ruleId":"119","severity":1,"message":"120","line":380,"column":7,"nodeType":"121","messageId":"122","endLine":383,"endColumn":15},{"ruleId":"123","severity":1,"message":"124","line":81,"column":11,"nodeType":"125","endLine":81,"endColumn":89},{"ruleId":"126","severity":1,"message":"127","line":6,"column":20,"nodeType":"128","messageId":"129","endLine":6,"endColumn":22},{"ruleId":"123","severity":1,"message":"124","line":6,"column":7,"nodeType":"125","endLine":6,"endColumn":32},{"ruleId":"100","severity":1,"message":"130","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":32},{"ruleId":"100","severity":1,"message":"131","line":2,"column":34,"nodeType":"102","messageId":"103","endLine":2,"endColumn":40},{"ruleId":"123","severity":1,"message":"124","line":69,"column":9,"nodeType":"125","endLine":69,"endColumn":87},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'post' is defined but never used.","'Dropzone' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'formData' is defined but never used.","'setCategoria' is assigned a value but never used.","'x' is defined but never used.","'categorias' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'unmountComponentAtNode' is defined but never used.","'render' is defined but never used.","no-global-assign","no-unsafe-negation"]