{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adriele\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\librasptbsite\\\\librasptbfrontend\\\\src\\\\component\\\\FileUpload.js\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone\"; // for pdf files\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      warningMsg: \"\"\n    };\n\n    this.onDrop = (accepted, rejected) => {\n      if (Object.keys(rejected).length !== 0) {\n        const message = \"Please submit valid file type\";\n        this.setState({\n          warningMsg: message\n        });\n      } else {\n        this.props.addFile(accepted);\n        this.setState({\n          warningMsg: \"\"\n        });\n        console.log(accepted[0].preview);\n        var blobPromise = new Promise((resolve, reject) => {\n          const reader = new window.FileReader();\n          reader.readAsDataURL(accepted[0]);\n\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n        blobPromise.then(value => {\n          console.log(value);\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      files\n    } = this.props;\n    const render = Object.keys(files).length !== 0 ? files.map(file => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: file.name\n    }, file.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 27\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"hello\",\n      children: \"Please drop only .PDF, .DOC or .DOCX files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.warningMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          height: \"50vh\",\n          border: \" 2px dashed\"\n        },\n        multiple: false,\n        accept: \"application/msword, application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        onDrop: (accepted, rejected) => this.onDrop(accepted, rejected),\n        children: _ref => {\n          let {\n            isDragAccept,\n            isDragReject,\n            acceptedFiles,\n            rejectedFiles\n          } = _ref;\n          if (isDragReject) return \"Please submit a valid file\";\n          return render;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/Users/Adriele/OneDrive/Área de Trabalho/librasptbsite/librasptbfrontend/src/component/FileUpload.js"],"names":["React","Dropzone","FileUpload","Component","state","warningMsg","onDrop","accepted","rejected","Object","keys","length","message","setState","props","addFile","console","log","preview","blobPromise","Promise","resolve","reject","reader","window","FileReader","readAsDataURL","onloadend","base64data","result","then","value","render","files","map","file","name","display","justifyContent","alignItems","height","border","isDragAccept","isDragReject","acceptedFiles","rejectedFiles"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CAEA;;;;AACA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAyC;AAAA;AAAA;AAAA,SACvCC,KADuC,GAC/B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAD+B;;AAAA,SAGvCC,MAHuC,GAG9B,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC/B,UAAIC,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,KAAiC,CAArC,EAAwC;AACtC,cAAMC,OAAO,GAAG,+BAAhB;AACA,aAAKC,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAEO;AAAd,SAAd;AACD,OAHD,MAGO;AACL,aAAKE,KAAL,CAAWC,OAAX,CAAmBR,QAAnB;AACA,aAAKM,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAE;AAAd,SAAd;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAAC,CAAD,CAAR,CAAYW,OAAxB;AAEA,YAAIC,WAAW,GAAG,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACjD,gBAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAX,EAAf;AACAF,UAAAA,MAAM,CAACG,aAAP,CAAqBnB,QAAQ,CAAC,CAAD,CAA7B;;AACAgB,UAAAA,MAAM,CAACI,SAAP,GAAmB,MAAM;AACvB,kBAAMC,UAAU,GAAGL,MAAM,CAACM,MAA1B;AACAR,YAAAA,OAAO,CAACO,UAAD,CAAP;AACD,WAHD;AAID,SAPiB,CAAlB;AAQAT,QAAAA,WAAW,CAACW,IAAZ,CAAiBC,KAAK,IAAI;AACxBf,UAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,SAFD;AAGD;AACF,KAxBsC;AAAA;;AA0BvCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKnB,KAAvB;AACA,UAAMkB,MAAM,GACVvB,MAAM,CAACC,IAAP,CAAYuB,KAAZ,EAAmBtB,MAAnB,KAA8B,CAA9B,GACEsB,KAAK,CAACC,GAAN,CAAUC,IAAI,iBAAI;AAAA,gBAAoBA,IAAI,CAACC;AAAzB,OAAQD,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA,YAAlB,CADF,gBAGE;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAOA,wBACE;AAAA,8BACE;AAAA,kBAAI,KAAKhC,KAAL,CAAWC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE;AACLgC,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,cAAc,EAAE,QAFX;AAGLC,UAAAA,UAAU,EAAE,QAHP;AAILC,UAAAA,MAAM,EAAE,MAJH;AAKLC,UAAAA,MAAM,EAAE;AALH,SADT;AAQE,QAAA,QAAQ,EAAE,KARZ;AASE,QAAA,MAAM,EAAC,8GATT;AAUE,QAAA,MAAM,EAAE,CAAClC,QAAD,EAAWC,QAAX,KAAwB,KAAKF,MAAL,CAAYC,QAAZ,EAAsBC,QAAtB,CAVlC;AAAA,kBAYG,QAAkE;AAAA,cAAjE;AAAEkC,YAAAA,YAAF;AAAgBC,YAAAA,YAAhB;AAA8BC,YAAAA,aAA9B;AAA6CC,YAAAA;AAA7C,WAAiE;AACjE,cAAIF,YAAJ,EAAkB,OAAO,4BAAP;AAClB,iBAAOX,MAAP;AACD;AAfH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAuBD;;AA1DsC;;AA6DzC,eAAe9B,UAAf","sourcesContent":["import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\n// for pdf files\r\nclass FileUpload extends React.Component {\r\n  state = { warningMsg: \"\" };\r\n\r\n  onDrop = (accepted, rejected) => {\r\n    if (Object.keys(rejected).length !== 0) {\r\n      const message = \"Please submit valid file type\";\r\n      this.setState({ warningMsg: message });\r\n    } else {\r\n      this.props.addFile(accepted);\r\n      this.setState({ warningMsg: \"\" });\r\n      console.log(accepted[0].preview);\r\n\r\n      var blobPromise = new Promise((resolve, reject) => {\r\n        const reader = new window.FileReader();\r\n        reader.readAsDataURL(accepted[0]);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          resolve(base64data);\r\n        };\r\n      });\r\n      blobPromise.then(value => {\r\n        console.log(value);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { files } = this.props;\r\n    const render =\r\n      Object.keys(files).length !== 0 ? (\r\n        files.map(file => <p key={file.name}>{file.name}</p>)\r\n      ) : (\r\n        <p className=\"hello\">Please drop only .PDF, .DOC or .DOCX files</p>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <p>{this.state.warningMsg}</p>\r\n\r\n        <Dropzone\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            height: \"50vh\",\r\n            border: \" 2px dashed\"\r\n          }}\r\n          multiple={false}\r\n          accept=\"application/msword, application/pdf, application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\r\n          onDrop={(accepted, rejected) => this.onDrop(accepted, rejected)}\r\n        >\r\n          {({ isDragAccept, isDragReject, acceptedFiles, rejectedFiles }) => {\r\n            if (isDragReject) return \"Please submit a valid file\";\r\n            return render;\r\n          }}\r\n        </Dropzone>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUpload;\r\n"]},"metadata":{},"sourceType":"module"}