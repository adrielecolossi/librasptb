{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adriele\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\librasptbsite\\\\librasptbfrontend\\\\src\\\\component\\\\ImageUpload.js\";\nimport React from \"react\";\nimport Dropzone from \"react-dropzone\"; // for profile picture\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ImageUpload extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      warningMsg: \"\"\n    };\n\n    this.onDrop = (accepted, rejected) => {\n      if (Object.keys(rejected).length !== 0) {\n        const message = \"Please submit valid file type\";\n        this.setState({\n          warningMsg: message\n        });\n      } else {\n        this.props.addFile(accepted);\n        this.setState({\n          warningMsg: \"\"\n        });\n        console.log(accepted[0].preview);\n        var blobPromise = new Promise((resolve, reject) => {\n          const reader = new window.FileReader();\n          reader.readAsDataURL(accepted[0]);\n\n          reader.onloadend = () => {\n            const base64data = reader.result;\n            resolve(base64data);\n          };\n        });\n        blobPromise.then(value => {// console.log(value);\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      files\n    } = this.props;\n    const thumbsContainer = {\n      width: \"150px\",\n      height: \"150px\",\n      borderRadius: \"50%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    };\n    const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"img\", {\n      style: thumbsContainer,\n      src: file.preview,\n      alt: \"profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this));\n    console.log(thumbs);\n    const render = Object.keys(files).length !== 0 ? files.map(file => /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"hello\",\n      children: \"+ image here to prompt users to click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.warningMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropzone, {\n        style: {\n          width: \"150px\",\n          height: \"150px\",\n          borderRadius: \"50%\",\n          objectFit: \"cover\",\n          objectPosition: \"center\",\n          border: \" 1px dashed\"\n        },\n        multiple: false,\n        accept: \"image/*\",\n        onDrop: (accepted, rejected) => this.onDrop(accepted, rejected),\n        children: _ref => {\n          let {\n            isDragAccept,\n            isDragReject,\n            acceptedFiles,\n            rejectedFiles\n          } = _ref;\n          // for drag and drop warning statement\n          if (isDragReject) return \"Please submit a valid file\";\n          return render;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ImageUpload;","map":{"version":3,"sources":["C:/Users/Adriele/OneDrive/Área de Trabalho/librasptbsite/librasptbfrontend/src/component/ImageUpload.js"],"names":["React","Dropzone","ImageUpload","Component","state","warningMsg","onDrop","accepted","rejected","Object","keys","length","message","setState","props","addFile","console","log","preview","blobPromise","Promise","resolve","reject","reader","window","FileReader","readAsDataURL","onloadend","base64data","result","then","value","render","files","thumbsContainer","width","height","borderRadius","objectFit","objectPosition","thumbs","map","file","border","isDragAccept","isDragReject","acceptedFiles","rejectedFiles"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\n\r\n// for profile picture\r\nclass ImageUpload extends React.Component {\r\n  state = { warningMsg: \"\" };\r\n\r\n  onDrop = (accepted, rejected) => {\r\n    if (Object.keys(rejected).length !== 0) {\r\n      const message = \"Please submit valid file type\";\r\n      this.setState({ warningMsg: message });\r\n    } else {\r\n      this.props.addFile(accepted);\r\n      this.setState({ warningMsg: \"\" });\r\n      console.log(accepted[0].preview);\r\n\r\n      var blobPromise = new Promise((resolve, reject) => {\r\n        const reader = new window.FileReader();\r\n        reader.readAsDataURL(accepted[0]);\r\n        reader.onloadend = () => {\r\n          const base64data = reader.result;\r\n          resolve(base64data);\r\n        };\r\n      });\r\n      blobPromise.then(value => {\r\n        // console.log(value);\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { files } = this.props;\r\n    const thumbsContainer = {\r\n      width: \"150px\",\r\n      height: \"150px\",\r\n      borderRadius: \"50%\",\r\n      objectFit: \"cover\",\r\n      objectPosition: \"center\"\r\n    };\r\n\r\n    const thumbs = files.map(file => (\r\n      <img style={thumbsContainer} src={file.preview} alt=\"profile\" />\r\n    ));\r\n\r\n    console.log(thumbs);\r\n\r\n    const render =\r\n      Object.keys(files).length !== 0 ? (\r\n        files.map(file => <aside>{thumbs}</aside>)\r\n      ) : (\r\n        <p className=\"hello\">+ image here to prompt users to click</p>\r\n      );\r\n\r\n    return (\r\n      <div>\r\n        <p>{this.state.warningMsg}</p>\r\n\r\n        <Dropzone\r\n          style={{\r\n            width: \"150px\",\r\n            height: \"150px\",\r\n            borderRadius: \"50%\",\r\n            objectFit: \"cover\",\r\n            objectPosition: \"center\",\r\n            border: \" 1px dashed\"\r\n          }}\r\n          multiple={false}\r\n          accept=\"image/*\"\r\n          onDrop={(accepted, rejected) => this.onDrop(accepted, rejected)}\r\n        >\r\n          {({ isDragAccept, isDragReject, acceptedFiles, rejectedFiles }) => {\r\n            // for drag and drop warning statement\r\n            if (isDragReject) return \"Please submit a valid file\";\r\n            return render;\r\n          }}\r\n        </Dropzone>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageUpload;\r\n"]},"metadata":{},"sourceType":"module"}